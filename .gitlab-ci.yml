# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python
# image: python:latest
image: docker

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
services:
  - docker:dind
  - postgres:latest

stages:
  - test
  - build
  - deploy

test:
  stage: test
  script:
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - pip install docker-compose
    - docker-compose -f local.yml build
    - rm ./app/migrations/*
    - docker-compose -f local.yml run --rm django flake8 --exclude=__init__.py
    - docker-compose -f local.yml run --rm django ./manage.py test
    - docker-compose -f local.yml run --rm django python3 manage.py makemigrations
    - docker-compose -f local.yml run --rm django python3 manage.py migrate

build:
  stage: build
  script:
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - pip install docker-compose
    - docker-compose -f local.yml build

.release: 
  stage: deploy
  script:
    - pip install -r requirements.txt
  dependencies:
  - build

release_development:
  extends: .release
  environment: 
    name: development
    url: https://arbc-dev.herokuapp.com/
  only: 
    - update_pipeline

release_staging:
  extends: .release
  environment: 
    name: staging
    url: https://arbc-stg.herokuapp.com/
  only: 
    - update_pipeline
    
release_production:
  extends: .release
  environment: 
    name: production
    url: https://arbc-app.herokuapp.com/
  only:
    - update_pipeline

