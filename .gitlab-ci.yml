# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python
# image: python:latest
image: docker

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
services:
  - docker:dind
  - postgres:latest

stages:
  - test
  - build
  - deploy

test:
  stage: test
  script:
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - pip install docker-compose
    #- pip install postgres
    - docker-compose -f local.yml build
    #- docker-compose -f local.yml up
    #- docker-compose -f local.yml run --rm django python3 manage.py makemigrations
    #- docker-compose -f local.yml run --rm django python3 manage.py migrate
    - rm ./app/migrations/*
    - docker-compose -f local.yml run --rm django flake8 #liting
    - touch .env.json
    - echo "{
    "DATABASE_URL": $DATABASE_URL,
    "SECRET_KEY": $SECRET_KEY,
    "DEFAULT_FILE_STORAGE" : $DEFAULT_FILE_STORAGE,
    "AWS_ACCESS_KEY_ID" : $AWS_ACCESS_KEY_ID,
    "AWS_SECRET_ACCESS_KEY" : $AWS_SECRET_ACCESS_KEY,
    "AWS_STORAGE_BUCKET_NAME" : $AWS_STORAGE_BUCKET_NAME,
    "AWS_S3_REGION_NAME" : $AWS_S3_REGION_NAME,
    "AWS_S3_ENDPOINT_URL" : $AWS_S3_ENDPOINT_URL,
    "DJANGO_READ_DOT_ENV_FILE" : "True"
    }" >> .env.json
    - docker-compose -f local.yml run --rm django ./manage.py test #unit test

build:
  stage: build
  script:
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - pip install docker-compose
    - docker-compose -f local.yml build

#test:
  #stage: test
  #script:
  #  - docker-compose -f local.yml run --rm django flake8
  #  - docker-compose -f local.yml run --rm django py.test
  #  - docker-compose -f local.yml run --rm django python3 manage.py makemigrations
  # - docker-compose -f local.yml up --build -d
